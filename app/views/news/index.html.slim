.contextual
  - if User.current.allowed_to?(:manage_news, @project, global: true)
    = link_to(l(:label_news_new), (@project ? project_news_index_path(@project) : news_index_path), class: 'icon icon-add add-news-link', onclick: 'showAndScrollTo("add-news", "news_title"); return false;')
    = watcher_link(@project.enabled_module('news'), User.current) if @project && User.current.logged?

#add-news style="display:none;"
  h2
    = l(:label_news_new)
  = labelled_form_for @news, url: (@project ? project_news_index_path(@project) : news_index_path), html: { id: 'news-form', multipart: true } do |f|
    = render partial: 'news/form', locals: { f: f }
  = submit_tag l(:button_create)
  = link_to l(:button_cancel), '#', onclick: '$("#add-news").hide();'

h2
  = l(:label_news_plural)

- if @newss.empty?
  p.nodata
    = l(:label_no_data)
- else
  - @newss.each do |news|
    article.news-article
      header
        h3
          - if news.is_private?
            = tag.i(class: 'fa fa-lock', title: I18n.t('news_private'), style: 'margin-right: 10px;')
          = avatar(news.author)
          = link_to_project(news.project) + ': ' unless news.project == @project
          = link_to h(news.title), news_path(news)
          = "(#{l(:label_x_comments, count: news.comments_count)})" if news.comments_count > 0
        p.author
          = authoring news.created_on, news.author
      .wiki
        = textilizable(news, :description)

span.pagination
  = pagination_links_full @news_pages

- other_formats_links do |f|
  = f.link_to 'Atom', url: { project_id: @project, key: User.current.atom_key }

- content_for :header_tags
  = auto_discovery_link_tag(:atom, _project_news_path(@project, key: User.current.atom_key, format: 'atom'))
  = stylesheet_link_tag 'scm'

- html_title(l(:label_news_plural))
