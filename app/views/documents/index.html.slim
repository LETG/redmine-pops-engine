- imageTypes = [".jpeg", ".JFIF", ".jpeg2000", ".exif", ".tiff", ".raw", ".gif", ".bmp", ".png"]
- wordTypes = [".doc", ".docx", ".rtf"]
- xlsTypes = [".xls", ".xlsx"]
- pdfTypes = [".pdf"]
- pptTypes = [".ppt", ".pptx", ".ppsx"]
- zipTypes = [".zip", ".rar", ".7z", ".tar", ".zipx"]

.contextual
  = link_to l(:label_document_new), new_project_document_path(@project), :class => 'icon icon-add',
      :onclick => 'showAndScrollTo("add-document", "document_title"); $(".project-documents").hide(); return false;' if User.current.allowed_to?(:add_documents, @project)
#add-document style="display:none;"
  h2= l(:label_document_new)
  = labelled_form_for @document, :url => project_documents_path(@project), :html => {:multipart => true} do |f|
    = render :partial => 'form', :locals => {:f => f}
    p
      = submit_tag l(:button_create)
      = link_to l(:button_cancel), "#", :onclick => '$("#add-document").hide(); $(".project-documents").show(); return false;'

.project-marge
.project-documents
  - DocumentCategory.all.each do |c|
    - if @project.documents.where(category_id: c.id).any?
      .project-documents-title
        = c.name
      .project-documents-list
        ul
          - @project.documents.where(category_id: c.id).each do |d|
            li.document
              .document-files.document-cell
                - if d.url_to
                  = link_to d.url_to, target: "_blank", title: d.url_to do
                    .document-file.icon-file-link
                - d.attachments.each do |a|
                  = link_to a, target: "_blank", title: a.filename do
                    - ext = File.extname(a.filename)
                    - if imageTypes.include?(ext)
                      .document-file.icon-file-image
                    - elsif wordTypes.include?(ext)
                      .document-file.icon-file-word
                    - elsif xlsTypes.include?(ext)
                      .document-file.icon-file-excel
                    - elsif pdfTypes.include?(ext)
                      .document-file.icon-file-pdf
                    - elsif pptTypes.include?(ext)
                      .document-file.icon-file-powerpoint
                    - elsif zipTypes.include?(ext)
                      .document-file.icon-file-zip
                    - else
                      .document-file.icon-file-default
              .document-infos.document-cell
                .document-info-header
                  = link_to d.title, d, class: "document-info-title"
                  .document-info-tags
                    - d.tag_list.each do |t|
                      .document-info-tag
                        = t
                .document-info-resume
                  = truncate(d.description, length: 100)
              .document-date.document-cell
                = d.created_date.strftime('%d.%m.%Y') if d.created_date